# Created by Goh Ee Sheng 2022, NYP FYPJ 2022 P4
# Supervisor: Dr Brandon Ooi

# Workflow summary:
# Get all images from subfolders in directory
# Resize and pad images to specific width and height.
# Save in another directory


# Required Libraries
import cv2
import numpy as np
import os
from os import listdir
from os.path import isfile, join
from pathlib import Path
import argparse
import numpy
 
ROOT_DIRECTORY = "/home/javier/Desktop/CSIT_AI/Datasets/Pre_processed/Grey_original/"

# Set the target directory
TARGET_DIRECTORY = '/home/javier/Desktop/CSIT_AI/Datasets/Pre_processed/grey_1024x1024/'

# Iterate over the subdirectories in the root directory
for subdir, dirs, files in os.walk(ROOT_DIRECTORY):
  # Iterate over the list of files
    onlyfiles = [f for f in listdir(subdir) if isfile(os.path.join(subdir,f))]
    images = numpy.empty(len(onlyfiles), dtype=object)

    # Iterate through every image
    # and resize all the images.
    for n in range(0, len(onlyfiles)):
        
        path = join(subdir, onlyfiles[n])
        dirname     = os.path.dirname(path)
        subdir_name = dirname.split('/')[-1]
        images[n] = cv2.imread(join(subdir, onlyfiles[n]),
                            cv2.IMREAD_UNCHANGED)
    
        # Load the image in img variable
        img = cv2.imread(path, 1)
    
        # To declare how much to resize
        resize_width = 1024
        resize_height = 1024
        resized_dimensions = (resize_width, resize_height)
    
        # Create resized image using the calculated dimensions
        resized_image = cv2.resize(img, resized_dimensions,
                                interpolation=cv2.INTER_AREA)
        # Create a unique output folder for the current subdirectory
        output_folder = os.path.join(TARGET_DIRECTORY, subdir_name)
        os.makedirs(output_folder,exist_ok=True)
        # Save the image in the output folder
        cv2.imwrite(
        output_folder + '/' + onlyfiles[n] + '_resized.png', resized_image)
        print(output_folder + '/' + onlyfiles[n] + '_resized.png', resized_image)
 
print("Images resizedÂ Successfully")
