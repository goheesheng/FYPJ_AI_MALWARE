# Created by Goh Ee Sheng 2022, NYP FYPJ 2022 P4
# Supervisor: Dr Brandon Ooi

# Workflow summary:
# Get images in directory
# Resize and pad images to specific width and height.
# Save in directory
# Required Libraries


import cv2
import numpy as np
import os
from os import listdir
from os.path import isfile, join
from pathlib import Path
import argparse
import numpy
 
# Argument parsing variable declared
ap = argparse.ArgumentParser()
 
ap.add_argument("-i", "--image",
                required=True,
                help="Path to folder")
 
args = vars(ap.parse_args())
 
# Find all the images in the provided images folder
mypath = args["image"]

onlyfiles = [f for f in listdir(mypath) if isfile(join(mypath, f))]
images = numpy.empty(len(onlyfiles), dtype=object)

 
# Iterate through every image
# and resize all the images.
for n in range(0, len(onlyfiles)):
 
    path = join(mypath, onlyfiles[n])
    dirname     = os.path.dirname(path)
    images[n] = cv2.imread(join(mypath, onlyfiles[n]),
                           cv2.IMREAD_UNCHANGED)
  
    # Load the image in img variable
    img = cv2.imread(path, 1)
 
    # To declare how much to resize
    resize_width = 64
    resize_hieght = 64
    resized_dimensions = (resize_width, resize_hieght)
 
    # Create resized image using the calculated dimensions
    resized_image = cv2.resize(img, resized_dimensions,
                               interpolation=cv2.INTER_AREA)
 
    # Save the image in Output Folder
    output_folder = dirname+'/resized_64x64/'
    output= os.makedirs(output_folder,exist_ok=True)
    cv2.imwrite(
      output_folder + onlyfiles[n] + '_resized.png', resized_image)
 
print("Images resized Successfully")